<?xml version="1.0" encoding="UTF-8"?>
<project name="ServerPack" default="dist" basedir=".">
    <description>Lineage 2 - Oath of Blood</description>
    
    <property name="src" location="java"/>
    <property name="lib" location="lib"/>
    <property name="build" location="build"/>
    <property name="build.classes" location="${build}/classes"/>
    <property name="build.dist" location="${build}/dist"/>
	<property name="build.dist.login" location="${build.dist}/login"/>
	<property name="build.dist.game" location="${build.dist}/gameserver"/>
    
    <path id="classpath">
        <fileset dir="${lib}">
            <include name="*.jar"/>
        </fileset>
    </path>   
    
    <target name="init" depends="clean" description="Create the output directories.">
        <mkdir dir="${build}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.dist}" />
    	<mkdir dir="${build.dist.login}" />
		<mkdir dir="${build.dist.game}" />
    </target>
    
    <target name="compile" depends="version" description="Compile the source.">
        <javac destdir="${build.classes}" optimize="on" debug="on" source="17" target="17" nowarn="off">
            <src path="${src}"/>
            <classpath refid="classpath"/>   
        </javac>
    </target>
    
    
    <target name="jar" depends="compile" description="Create the jar file">
        <jar destfile="${build}/l2jserver.jar">
            <fileset dir="${build.classes}"/>
            <manifest>
                <attribute name="Main-Class" value="net.sf.l2j.Server"/>
                <attribute name="Class-Path" value=". bsf.jar bsh-2.0b4.jar commons-logging-1.1.jar c3p0-0.9.1.jar jython.jar mysql-connector-java-5.0.4-bin.jar javolution.jar"/>
            </manifest>
        </jar>
        
    	<copy todir="${build.dist.login}">
            <fileset dir="${build}">
                <include name="l2jserver.jar"/>
			</fileset>
        </copy>
    	<copy todir="${build.dist.game}">
            <fileset dir="${build}">
                <include name="l2jserver.jar"/>
			</fileset>
        </copy>
	</target>
    
    <target name="compile.gcj" depends="jar" description="Build machine executable binary">
        <exec dir="." executable="gcj" failifexecutionfails="false" os="linux:Linux:freebsd:FreeBSD" >
            <arg line="-O3 ${build.dist}/l2jserver.jar  -o ${build.dist}/l2jserver --main=net.sf.l2j.Server"/>
        </exec>
    </target>

    <target name="dist" depends="jar">
    	<copy todir="${build.dist.login}">
            <fileset dir="${src}">
                <include name="log.cfg"/>
                <include name="banned_ip.cfg"/>
                <include name="console.cfg"/>
			</fileset>
        </copy>
    	<copy todir="${build.dist.game}">
            <fileset dir="${src}">
                <include name="log.cfg"/>
                <include name="console.cfg"/>
			</fileset>
        </copy>
    	<copy todir="${build.dist.login}">
			<fileset dir="${src}/../lib">
				<include name="c3p0-0.9.1.jar"/>
				<include name="mysql-connector-java-5.0.4-bin.jar"/>
				<include name="javolution.jar"/>
			</fileset>
		</copy>
	   	<copy todir="${build.dist.game}">
			<fileset dir="${src}/../lib">
				<include name="*.jar"/>
			</fileset>
		</copy>
        <copy todir="${build.dist.login}">
            <fileset dir="dist">
                <include name="startAccountManager.*"/>
                <include name="startSQLAccountManager.*"/>
                <include name="LoginServer_loop.sh"/>
                <include name="startLoginServer.*"/>
            	<include name="RegisterGameServer.*"/>
            </fileset>
        </copy>
    	<copy todir="${build.dist.game}">
            <fileset dir="dist">
                <include name="GameServer_loop.sh"/>
                <include name="startGameServer.*"/>
            	<include name="hibernate.cfg.xml"/>
            </fileset>
        </copy>
    	
		<fixcrlf srcdir="${build.dist.game}" eol="lf" eof="remove" includes="**/*.sh"></fixcrlf>
    	<fixcrlf srcdir="${build.dist.login}" eol="lf" eof="remove" includes="**/*.sh"></fixcrlf>
		<fixcrlf srcdir="${build.dist.game}" eol="crlf" eof="remove" includes="**/*.bat"></fixcrlf>
    	<fixcrlf srcdir="${build.dist.login}" eol="crlf" eof="remove" includes="**/*.bat"></fixcrlf>

        <mkdir dir="${build.dist.game}/log" />
    	<mkdir dir="${build.dist.login}/log" />
        <mkdir dir="${build.dist.game}/hibernate-mapping" />
        <mkdir dir="${build.dist.game}/config" />
    	<mkdir dir="${build.dist.login}/config" />

    	<copy todir="${build.dist.game}/config">
			<fileset dir="java/config">
				<include name="*.properties"/>
				<exclude name="loginserver.properties" />
			</fileset>
        </copy>
    	<copy todir="${build.dist.login}/config">
			<fileset dir="java/config">
				<include name="loginserver.properties"/>
				<include name="telnet.properties"/>
			</fileset>
		</copy>

        <mkdir dir="${build.dist.game}/data" />
        <copy todir="${build.dist.game}/data">
            <fileset dir="data">
                <include name="*.csv"/>
            	<include name="*.txt"/>
			</fileset>
        </copy>
    	
        <mkdir dir="${build.dist.game}/data/geodata" />
        <copy todir="${build.dist.game}/data/geodata">
            <fileset dir="data/geodata">
                <include name="*.txt"/>
                <include name="*.l2j"/>
            </fileset>
        </copy>
    	
    	<mkdir dir="${build.dist.game}/data/pathnode" />
    	<copy todir="${build.dist.game}/data/pathnode">
    	    <fileset dir="data/pathnode">
    	        <include name="*.txt"/>
    	        <include name="*.pn"/>
    	    </fileset>
    	</copy>

        <zip destfile="${build}/l2j-server.zip" basedir="${build.dist}" />
    </target>   

    <target name="clean" description="Remove the output directories">
        <delete dir="${build}"/>
    </target>
</project>